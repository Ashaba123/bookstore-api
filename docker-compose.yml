version: '3.8'
services:
  users-service:
    build: ./users-service
    ports:
      - "3000:3000"
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
  books-service:
    build: ./books-service
    ports:
      - "3001:3001"
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
  orders-service:
    build: ./orders-service
    ports:
      - "3002:3002"
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - postgres
      - rabbitmq
  reviews-service:
    build: ./reviews-service
    ports:
      - "3003:3003"
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
    depends_on:
      - postgres
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:6
  rabbitmq:
    image: rabbitmq:3-management
volumes:
  postgres_data: